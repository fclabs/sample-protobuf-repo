syntax = "proto3";

package api.v1;

option go_package = "github.com/yourorg/protos/generated/go/api/v1";
option java_package = "com.yourorg.protos.api.v1";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "common/base.proto";
import "common/error.proto";
import "domain/user.proto";

// User service provides CRUD operations for user management
service UserService {
  // Create a new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  
  // Get user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  
  // Update user information
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  
  // Delete user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  
  // List users with pagination and filtering
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  
  // Search users by criteria
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
  
  // Update user status
  rpc UpdateUserStatus(UpdateUserStatusRequest) returns (UpdateUserStatusResponse);
  
  // Verify user email
  rpc VerifyUserEmail(VerifyUserEmailRequest) returns (VerifyUserEmailResponse);
}

// Create user request
message CreateUserRequest {
  domain.CreateUserRequest user = 1;
}

// Create user response
message CreateUserResponse {
  domain.User user = 1;
  string access_token = 2;
  string refresh_token = 3;
}

// Get user request
message GetUserRequest {
  string user_id = 1;
}

// Get user response
message GetUserResponse {
  domain.User user = 1;
}

// Update user request
message UpdateUserRequest {
  domain.UpdateUserRequest user = 1;
}

// Update user response
message UpdateUserResponse {
  domain.User user = 1;
}

// Delete user request
message DeleteUserRequest {
  string user_id = 1;
  bool permanent = 2;
}

// Delete user response
message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

// List users request
message ListUsersRequest {
  common.PaginationRequest pagination = 1;
  domain.UserSearchCriteria filters = 2;
}

// List users response
message ListUsersResponse {
  repeated domain.User users = 1;
  common.PaginationResponse pagination = 2;
  int32 total_count = 3;
}

// Search users request
message SearchUsersRequest {
  string query = 1;
  common.PaginationRequest pagination = 2;
  domain.UserSearchCriteria filters = 3;
}

// Search users response
message SearchUsersResponse {
  repeated domain.User users = 1;
  common.PaginationResponse pagination = 2;
  int32 total_count = 3;
}

// Update user status request
message UpdateUserStatusRequest {
  string user_id = 1;
  domain.UserStatus status = 2;
  string reason = 3;
}

// Update user status response
message UpdateUserStatusResponse {
  domain.User user = 1;
  string message = 2;
}

// Verify user email request
message VerifyUserEmailRequest {
  string user_id = 1;
  string verification_token = 2;
}

// Verify user email response
message VerifyUserEmailResponse {
  bool success = 1;
  string message = 2;
  domain.User user = 3;
}
